plugins {
    id 'groovy'
    id 'java'
    id 'checkstyle'
    id 'findbugs'
    id 'pmd'
    id 'maven'
}

group 'org.royole'
version '1.1.0'

sourceCompatibility = 1.8


repositories {
    google()
    jcenter()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'com.android.tools.build:gradle:3.2.1'
}

def MAVEN_LOCAL_URL = "file://D:/maven local"
def artifactId = 'quality'


def POM_DESCRIPTION = 'a gradle plugin for checking code'   // 项目描述

def NEXUS_USERNAME = 'royole'   //用户名

def NEXUS_PASSWORD = 'Royole#1901'  //密码

def NEXUS_REPOSITORY_URL = 'http://172.16.100.140:8081/repository/releases/'  // repository的URL

// 打包源文件
task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
    def var = "variable"
    def a = { 
        param1 ->
        println "this is closure"
//        println "variable: $param1"
        println "param it : " + it
        def b = {
            println "this is closure b"
            println "param it : " + it
        }
        b.call(23)
//            println "param1: $param1"
        return 45
    }
    println a.call()
}

// 要生成的artifacts
artifacts {
    archives sourcesJar
//    archives javadocsJar
}


uploadArchives {
    repositories {
        mavenDeployer {
            //plugin 导出路径
//            configuration = configurations.deployerJars
            pom.groupId = rootProject.group
            pom.artifactId = artifactId
            pom.version = rootProject.version
//            pom.packaging = 'aar'
            repository(url: NEXUS_REPOSITORY_URL) {
                authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
            }
//            repository(url: MAVEN_LOCAL_URL)
        }
    }
}

task "task_demo" {
    println 'task demo'
}

task loadfile {
    doLast {
        def files = file('./antLoadfileResources').listFiles().sort()
        files.each { File file ->
            if (file.isFile()) {
                ant.loadfile(srcFile: file, property: file.name)
                println " *** $file.name ***"
                println "${ant.properties[file.name]}"
            }
        }
    }
}


processResources {
    from(rootDir.toPath() + "src/main/resources") {
        include '**/*.xml'
    }
}